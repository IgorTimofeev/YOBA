#pragma once

#include <YOBA/main.h>
namespace YOBA {
	class unscii8ThinFont : public Font {
		public:
			unscii8ThinFont() : Font(
				32,
				126,
				8,
				9,
				_glyphs,
				_bitmap
			) {
				
			}
	
		private:
			constexpr static Glyph _glyphs[95] = {
				Glyph(0), //  
				Glyph(72), // !
				Glyph(144), // "
				Glyph(216), // #
				Glyph(288), // $
				Glyph(360), // %
				Glyph(432), // &
				Glyph(504), // '
				Glyph(576), // (
				Glyph(648), // )
				Glyph(720), // *
				Glyph(792), // +
				Glyph(864), // ,
				Glyph(936), // -
				Glyph(1008), // .
				Glyph(1080), // /
				Glyph(1152), // 0
				Glyph(1224), // 1
				Glyph(1296), // 2
				Glyph(1368), // 3
				Glyph(1440), // 4
				Glyph(1512), // 5
				Glyph(1584), // 6
				Glyph(1656), // 7
				Glyph(1728), // 8
				Glyph(1800), // 9
				Glyph(1872), // :
				Glyph(1944), // ;
				Glyph(2016), // <
				Glyph(2088), // =
				Glyph(2160), // >
				Glyph(2232), // ?
				Glyph(2304), // @
				Glyph(2376), // A
				Glyph(2448), // B
				Glyph(2520), // C
				Glyph(2592), // D
				Glyph(2664), // E
				Glyph(2736), // F
				Glyph(2808), // G
				Glyph(2880), // H
				Glyph(2952), // I
				Glyph(3024), // J
				Glyph(3096), // K
				Glyph(3168), // L
				Glyph(3240), // M
				Glyph(3312), // N
				Glyph(3384), // O
				Glyph(3456), // P
				Glyph(3528), // Q
				Glyph(3600), // R
				Glyph(3672), // S
				Glyph(3744), // T
				Glyph(3816), // U
				Glyph(3888), // V
				Glyph(3960), // W
				Glyph(4032), // X
				Glyph(4104), // Y
				Glyph(4176), // Z
				Glyph(4248), // [
				Glyph(4320), // Backslash
				Glyph(4392), // ]
				Glyph(4464), // ^
				Glyph(4536), // _
				Glyph(4608), // `
				Glyph(4680), // a
				Glyph(4752), // b
				Glyph(4824), // c
				Glyph(4896), // d
				Glyph(4968), // e
				Glyph(5040), // f
				Glyph(5112), // g
				Glyph(5184), // h
				Glyph(5256), // i
				Glyph(5328), // j
				Glyph(5400), // k
				Glyph(5472), // l
				Glyph(5544), // m
				Glyph(5616), // n
				Glyph(5688), // o
				Glyph(5760), // p
				Glyph(5832), // q
				Glyph(5904), // r
				Glyph(5976), // s
				Glyph(6048), // t
				Glyph(6120), // u
				Glyph(6192), // v
				Glyph(6264), // w
				Glyph(6336), // x
				Glyph(6408), // y
				Glyph(6480), // z
				Glyph(6552), // {
				Glyph(6624), // |
				Glyph(6696), // }
				Glyph(6768) // ~
			};
	
			constexpr static uint8_t _bitmap[855] = {
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x08,
				0x00, 0x00, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x7E, 0x24, 0x7E,
				0x24, 0x24, 0x00, 0x00, 0x08, 0x3C, 0x0A, 0x1C, 0x28, 0x1E, 0x08, 0x00, 0x00, 0x00, 0x46, 0x26,
				0x10, 0x08, 0x64, 0x62, 0x00, 0x00, 0x0C, 0x12, 0x12, 0x0C, 0x52, 0x22, 0x5C, 0x00, 0x00, 0x10,
				0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x04, 0x04, 0x08, 0x10, 0x00,
				0x00, 0x04, 0x08, 0x10, 0x10, 0x10, 0x08, 0x04, 0x00, 0x00, 0x08, 0x2A, 0x1C, 0x08, 0x1C, 0x2A,
				0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x10, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00,
				0x1C, 0x22, 0x32, 0x2A, 0x26, 0x22, 0x1C, 0x00, 0x00, 0x08, 0x0C, 0x0A, 0x08, 0x08, 0x08, 0x3E,
				0x00, 0x00, 0x1C, 0x22, 0x20, 0x10, 0x0C, 0x02, 0x3E, 0x00, 0x00, 0x1C, 0x22, 0x20, 0x18, 0x20,
				0x22, 0x1C, 0x00, 0x00, 0x10, 0x18, 0x14, 0x12, 0x3E, 0x10, 0x10, 0x00, 0x00, 0x3E, 0x02, 0x1E,
				0x20, 0x20, 0x22, 0x1C, 0x00, 0x00, 0x38, 0x04, 0x02, 0x1E, 0x22, 0x22, 0x1C, 0x00, 0x00, 0x3E,
				0x20, 0x10, 0x08, 0x04, 0x04, 0x04, 0x00, 0x00, 0x1C, 0x22, 0x22, 0x1C, 0x22, 0x22, 0x1C, 0x00,
				0x00, 0x1C, 0x22, 0x22, 0x3C, 0x20, 0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x04, 0x00, 0x10, 0x08, 0x04, 0x02,
				0x04, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x04, 0x08,
				0x10, 0x20, 0x10, 0x08, 0x04, 0x00, 0x00, 0x3C, 0x42, 0x20, 0x10, 0x10, 0x00, 0x10, 0x00, 0x00,
				0x3C, 0x42, 0x52, 0x6A, 0x32, 0x02, 0x3C, 0x00, 0x00, 0x18, 0x24, 0x42, 0x7E, 0x42, 0x42, 0x42,
				0x00, 0x00, 0x3E, 0x42, 0x42, 0x3E, 0x42, 0x42, 0x3E, 0x00, 0x00, 0x3C, 0x42, 0x02, 0x02, 0x02,
				0x42, 0x3C, 0x00, 0x00, 0x1E, 0x22, 0x42, 0x42, 0x42, 0x22, 0x1E, 0x00, 0x00, 0x7E, 0x02, 0x02,
				0x1E, 0x02, 0x02, 0x7E, 0x00, 0x00, 0x7E, 0x02, 0x02, 0x1E, 0x02, 0x02, 0x02, 0x00, 0x00, 0x3C,
				0x42, 0x02, 0x72, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00,
				0x00, 0x1C, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x22,
				0x1C, 0x00, 0x00, 0x42, 0x22, 0x12, 0x0E, 0x12, 0x22, 0x42, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02,
				0x02, 0x02, 0x7E, 0x00, 0x00, 0x42, 0x66, 0x5A, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x42, 0x46,
				0x4A, 0x52, 0x62, 0x42, 0x42, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00,
				0x3E, 0x42, 0x42, 0x3E, 0x02, 0x02, 0x02, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x52, 0x22, 0x5C,
				0x00, 0x00, 0x3E, 0x42, 0x42, 0x3E, 0x12, 0x22, 0x42, 0x00, 0x00, 0x3C, 0x42, 0x02, 0x3C, 0x40,
				0x42, 0x3C, 0x00, 0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x42, 0x42, 0x42,
				0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x24, 0x18, 0x00, 0x00, 0x42,
				0x42, 0x42, 0x42, 0x5A, 0x66, 0x42, 0x00, 0x00, 0x42, 0x42, 0x24, 0x18, 0x24, 0x42, 0x42, 0x00,
				0x00, 0x22, 0x22, 0x22, 0x1C, 0x08, 0x08, 0x08, 0x00, 0x00, 0x3E, 0x20, 0x10, 0x08, 0x04, 0x02,
				0x3E, 0x00, 0x00, 0x1C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x1C, 0x00, 0x00, 0x01, 0x02, 0x04, 0x08,
				0x10, 0x20, 0x40, 0x00, 0x00, 0x1C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x00, 0x00, 0x08, 0x14,
				0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
				0x04, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x20, 0x3C, 0x22, 0x3C,
				0x00, 0x00, 0x02, 0x02, 0x1E, 0x22, 0x22, 0x22, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x22, 0x02,
				0x22, 0x1C, 0x00, 0x00, 0x20, 0x20, 0x3C, 0x22, 0x22, 0x22, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x1C,
				0x22, 0x3E, 0x02, 0x1C, 0x00, 0x00, 0x30, 0x48, 0x08, 0x3E, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00,
				0x00, 0x3C, 0x22, 0x22, 0x3C, 0x20, 0x1C, 0x00, 0x02, 0x02, 0x1E, 0x22, 0x22, 0x22, 0x22, 0x00,
				0x00, 0x08, 0x00, 0x0C, 0x08, 0x08, 0x08, 0x1C, 0x00, 0x00, 0x20, 0x00, 0x30, 0x20, 0x20, 0x20,
				0x24, 0x18, 0x00, 0x02, 0x02, 0x22, 0x12, 0x0E, 0x12, 0x22, 0x00, 0x00, 0x0C, 0x08, 0x08, 0x08,
				0x08, 0x08, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x16, 0x2A, 0x2A, 0x2A, 0x2A, 0x00, 0x00, 0x00, 0x00,
				0x1E, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00,
				0x00, 0x00, 0x1E, 0x22, 0x22, 0x1E, 0x02, 0x02, 0x00, 0x00, 0x00, 0x3C, 0x22, 0x22, 0x3C, 0x20,
				0x20, 0x00, 0x00, 0x00, 0x3A, 0x06, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x02, 0x1C,
				0x20, 0x1E, 0x00, 0x00, 0x04, 0x04, 0x1E, 0x04, 0x04, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00, 0x22,
				0x22, 0x22, 0x22, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00,
				0x00, 0x22, 0x2A, 0x2A, 0x2A, 0x14, 0x00, 0x00, 0x00, 0x00, 0x22, 0x14, 0x08, 0x14, 0x22, 0x00,
				0x00, 0x00, 0x00, 0x22, 0x22, 0x22, 0x3C, 0x20, 0x1C, 0x00, 0x00, 0x00, 0x3E, 0x10, 0x08, 0x04,
				0x3E, 0x00, 0x00, 0x18, 0x04, 0x04, 0x02, 0x04, 0x04, 0x18, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08,
				0x08, 0x08, 0x08, 0x08, 0x00, 0x0C, 0x10, 0x10, 0x20, 0x10, 0x10, 0x0C, 0x00, 0x00, 0x04, 0x2A,
				0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
			};
	};
}